{"ast":null,"code":"import React,{useState,useEffect}from'react';import{sleeperApi}from'../services/sleeperApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ActivityFeed=_ref=>{let{leagueId}=_ref;const[transactions,setTransactions]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[players,setPlayers]=useState({});useEffect(()=>{const fetchActivityData=async()=>{try{setLoading(true);const[transactionData,playersData]=await Promise.all([sleeperApi.getLeagueTransactions(leagueId),sleeperApi.getAllPlayers()]);setTransactions(transactionData.slice(0,10));// Show last 10 transactions\nsetPlayers(playersData);}catch(err){setError('Failed to fetch activity data');console.error('Activity feed error:',err);}finally{setLoading(false);}};if(leagueId){fetchActivityData();}},[leagueId]);const getPlayerName=playerId=>{const player=players[playerId];if(!player)return\"Player \".concat(playerId);return\"\".concat(player.first_name||'',\" \").concat(player.last_name||'').trim()||player.full_name||\"Player \".concat(playerId);};const getTransactionDescription=transaction=>{const timeAgo=Math.floor((Date.now()-transaction.created)/(1000*60*60*24));const timeText=timeAgo===0?'Today':\"\".concat(timeAgo,\"d ago\");if(transaction.type==='waiver'){if(transaction.adds&&transaction.drops){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);const droppedPlayers=Object.keys(transaction.drops).map(getPlayerName);return\"Waiver: Added \".concat(addedPlayers.join(', '),\" \\u2022 Dropped \").concat(droppedPlayers.join(', '),\" (\").concat(timeText,\")\");}else if(transaction.adds){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);return\"Waiver: Added \".concat(addedPlayers.join(', '),\" (\").concat(timeText,\")\");}}else if(transaction.type==='free_agent'){if(transaction.adds&&transaction.drops){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);const droppedPlayers=Object.keys(transaction.drops).map(getPlayerName);return\"Free Agent: Added \".concat(addedPlayers.join(', '),\" \\u2022 Dropped \").concat(droppedPlayers.join(', '),\" (\").concat(timeText,\")\");}else if(transaction.adds){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);return\"Free Agent: Added \".concat(addedPlayers.join(', '),\" (\").concat(timeText,\")\");}}else if(transaction.type==='trade'){return\"Trade completed (\".concat(timeText,\")\");}return\"\".concat(transaction.type,\" transaction (\").concat(timeText,\")\");};const getTransactionIcon=transaction=>{switch(transaction.type){case'waiver':return'üìã';case'free_agent':return'üÜì';case'trade':return'üîÑ';default:return'üìù';}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-feed-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading recent activity...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-feed-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-feed-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),transactions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-activity\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No recent transactions\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"activity-list\",children:transactions.map(transaction=>/*#__PURE__*/_jsxs(\"div\",{className:\"activity-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-icon\",children:getTransactionIcon(transaction)}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-description\",children:getTransactionDescription(transaction)}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-status\",children:[\"Status: \",transaction.status]})]})]},transaction.transaction_id))})]});};export default ActivityFeed;","map":{"version":3,"names":["React","useState","useEffect","sleeperApi","jsx","_jsx","jsxs","_jsxs","ActivityFeed","_ref","leagueId","transactions","setTransactions","loading","setLoading","error","setError","players","setPlayers","fetchActivityData","transactionData","playersData","Promise","all","getLeagueTransactions","getAllPlayers","slice","err","console","getPlayerName","playerId","player","concat","first_name","last_name","trim","full_name","getTransactionDescription","transaction","timeAgo","Math","floor","Date","now","created","timeText","type","adds","drops","addedPlayers","Object","keys","map","droppedPlayers","join","getTransactionIcon","className","children","length","status","transaction_id"],"sources":["/Users/roshikdatla/Documents/Amberwood-Football-League/fantasy-football-dashboard/src/components/ActivityFeed.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { sleeperApi } from '../services/sleeperApi';\n\ninterface Transaction {\n  transaction_id: string;\n  type: string;\n  status: string;\n  created: number;\n  roster_ids: number[];\n  adds: { [key: string]: number } | null;\n  drops: { [key: string]: number } | null;\n  waiver_budget: any[];\n}\n\ninterface ActivityFeedProps {\n  leagueId: string;\n}\n\nconst ActivityFeed: React.FC<ActivityFeedProps> = ({ leagueId }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string>('');\n  const [players, setPlayers] = useState<{ [key: string]: any }>({});\n\n  useEffect(() => {\n    const fetchActivityData = async () => {\n      try {\n        setLoading(true);\n        const [transactionData, playersData] = await Promise.all([\n          sleeperApi.getLeagueTransactions(leagueId),\n          sleeperApi.getAllPlayers()\n        ]);\n        \n        setTransactions(transactionData.slice(0, 10)); // Show last 10 transactions\n        setPlayers(playersData);\n      } catch (err) {\n        setError('Failed to fetch activity data');\n        console.error('Activity feed error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (leagueId) {\n      fetchActivityData();\n    }\n  }, [leagueId]);\n\n  const getPlayerName = (playerId: string): string => {\n    const player = players[playerId];\n    if (!player) return `Player ${playerId}`;\n    return `${player.first_name || ''} ${player.last_name || ''}`.trim() || player.full_name || `Player ${playerId}`;\n  };\n\n  const getTransactionDescription = (transaction: Transaction): string => {\n    const timeAgo = Math.floor((Date.now() - transaction.created) / (1000 * 60 * 60 * 24));\n    const timeText = timeAgo === 0 ? 'Today' : `${timeAgo}d ago`;\n\n    if (transaction.type === 'waiver') {\n      if (transaction.adds && transaction.drops) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        const droppedPlayers = Object.keys(transaction.drops).map(getPlayerName);\n        return `Waiver: Added ${addedPlayers.join(', ')} ‚Ä¢ Dropped ${droppedPlayers.join(', ')} (${timeText})`;\n      } else if (transaction.adds) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        return `Waiver: Added ${addedPlayers.join(', ')} (${timeText})`;\n      }\n    } else if (transaction.type === 'free_agent') {\n      if (transaction.adds && transaction.drops) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        const droppedPlayers = Object.keys(transaction.drops).map(getPlayerName);\n        return `Free Agent: Added ${addedPlayers.join(', ')} ‚Ä¢ Dropped ${droppedPlayers.join(', ')} (${timeText})`;\n      } else if (transaction.adds) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        return `Free Agent: Added ${addedPlayers.join(', ')} (${timeText})`;\n      }\n    } else if (transaction.type === 'trade') {\n      return `Trade completed (${timeText})`;\n    }\n\n    return `${transaction.type} transaction (${timeText})`;\n  };\n\n  const getTransactionIcon = (transaction: Transaction): string => {\n    switch (transaction.type) {\n      case 'waiver':\n        return 'üìã';\n      case 'free_agent':\n        return 'üÜì';\n      case 'trade':\n        return 'üîÑ';\n      default:\n        return 'üìù';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"activity-feed-container\">\n        <h3>Recent Activity</h3>\n        <div className=\"loading\">Loading recent activity...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"activity-feed-container\">\n        <h3>Recent Activity</h3>\n        <div className=\"error\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"activity-feed-container\">\n      <h3>Recent Activity</h3>\n      {transactions.length === 0 ? (\n        <div className=\"no-activity\">\n          <p>No recent transactions</p>\n        </div>\n      ) : (\n        <div className=\"activity-list\">\n          {transactions.map((transaction) => (\n            <div key={transaction.transaction_id} className=\"activity-item\">\n              <div className=\"activity-icon\">\n                {getTransactionIcon(transaction)}\n              </div>\n              <div className=\"activity-content\">\n                <div className=\"activity-description\">\n                  {getTransactionDescription(transaction)}\n                </div>\n                <div className=\"activity-status\">\n                  Status: {transaction.status}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ActivityFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}