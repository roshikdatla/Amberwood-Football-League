{"ast":null,"code":"export class ClaudeApiService{constructor(){this.apiKey=void 0;this.baseUrl='https://api.anthropic.com/v1/messages';this.apiKey=process.env.REACT_APP_CLAUDE_API_KEY||'';if(!this.apiKey){console.warn('Claude API key not found. Set REACT_APP_CLAUDE_API_KEY environment variable.');}}async analyzeTeam(team,allTeams,leagueName,currentWeek){if(!this.apiKey){throw new Error('Claude API key not configured');}const leagueContext=this.buildLeagueContext(allTeams,leagueName,currentWeek);const teamContext=this.buildTeamContext(team,allTeams);const upcomingOpponent=this.getUpcomingOpponent(team,allTeams,currentWeek);const prompt=\"Provide a comprehensive fantasy football analysis for this team:\\n\\nLEAGUE CONTEXT:\\n\".concat(leagueContext,\"\\n\\nTEAM TO ANALYZE:\\n\").concat(team.display_name,\"\\nRecord: \").concat(team.wins,\"-\").concat(team.losses,\"\\nPoints For: \").concat(team.points_for.toFixed(1),\"\\nLeague Rank: \").concat(team.rank,\" out of \").concat(allTeams.length,\"\\n\\nPERFORMANCE CONTEXT:\\n\").concat(teamContext,\"\\n\\nUPCOMING MATCHUP:\\nNext opponent: \").concat(upcomingOpponent,\"\\n\\nProvide a detailed analysis in JSON format:\\n{\\n  \\\"overallGrade\\\": \\\"A+/A/A-/B+/B/B-/C+/C/C-/D+/D/F\\\",\\n  \\\"gradeExplanation\\\": \\\"2-3 sentence explanation of the grade\\\",\\n  \\\"strengths\\\": [\\\"strength1\\\", \\\"strength2\\\", \\\"strength3\\\"],\\n  \\\"weaknesses\\\": [\\\"weakness1\\\", \\\"weakness2\\\", \\\"weakness3\\\"], \\n  \\\"advice\\\": \\\"Specific actionable advice for upcoming games\\\",\\n  \\\"outlook\\\": \\\"Rest of season and playoff outlook\\\",\\n  \\\"upcomingMatchup\\\": {\\n    \\\"opponent\\\": \\\"\").concat(upcomingOpponent,\"\\\",\\n    \\\"prediction\\\": \\\"Win/Loss prediction with score estimate\\\",\\n    \\\"keyFactors\\\": [\\\"factor1\\\", \\\"factor2\\\", \\\"factor3\\\"],\\n    \\\"confidence\\\": \\\"High/Medium/Low confidence level\\\"\\n  },\\n  \\\"rosterAnalysis\\\": {\\n    \\\"qb\\\": \\\"QB position strength assessment\\\",\\n    \\\"rb\\\": \\\"RB position strength assessment\\\", \\n    \\\"wr\\\": \\\"WR position strength assessment\\\",\\n    \\\"te\\\": \\\"TE position strength assessment\\\",\\n    \\\"flex\\\": \\\"FLEX position depth assessment\\\",\\n    \\\"defense\\\": \\\"K/DST strength assessment\\\"\\n  },\\n  \\\"recentTrends\\\": [\\\"trend1\\\", \\\"trend2\\\", \\\"trend3\\\"]\\n}\\n\\nFocus on fantasy football strategy, performance trends, and actionable insights.\");try{var _data$content$;const response=await fetch(this.baseUrl,{method:'POST',headers:{'Content-Type':'application/json','x-api-key':this.apiKey,'anthropic-version':'2023-06-01'},body:JSON.stringify({model:'claude-3-sonnet-20240229',max_tokens:1000,messages:[{role:'user',content:prompt}]})});if(!response.ok){throw new Error(\"Claude API error: \".concat(response.status));}const data=await response.json();const analysisText=((_data$content$=data.content[0])===null||_data$content$===void 0?void 0:_data$content$.text)||'';// Parse the JSON response from Claude\nconst jsonMatch=analysisText.match(/\\{[\\s\\S]*\\}/);if(!jsonMatch){throw new Error('Invalid response format from Claude API');}const analysisData=JSON.parse(jsonMatch[0]);return{teamName:team.display_name,record:\"\".concat(team.wins,\"-\").concat(team.losses),overallGrade:analysisData.overallGrade||'B',gradeExplanation:analysisData.gradeExplanation||'Standard performance assessment.',strengths:analysisData.strengths||[],weaknesses:analysisData.weaknesses||[],advice:analysisData.advice||'No specific advice available.',outlook:analysisData.outlook||'Outlook not available.',upcomingMatchup:analysisData.upcomingMatchup||{opponent:upcomingOpponent,prediction:'Competitive matchup expected',keyFactors:['Player availability','Recent form','Matchup history'],confidence:'Medium'},rosterAnalysis:analysisData.rosterAnalysis||{qb:'QB assessment not available',rb:'RB assessment not available',wr:'WR assessment not available',te:'TE assessment not available',flex:'Flex assessment not available',defense:'K/DST assessment not available'},recentTrends:analysisData.recentTrends||['Performance trends not available']};}catch(error){console.error('Claude API error:',error);// Fallback analysis if API fails\nreturn this.getFallbackAnalysis(team,allTeams);}}buildLeagueContext(teams,leagueName,currentWeek){const topTeams=teams.slice(0,3);const bottomTeams=teams.slice(-3);return\"League: \".concat(leagueName,\"\\nCurrent Week: \").concat(currentWeek,\"\\nLeague Size: \").concat(teams.length,\" teams\\n\\nTop 3 Teams:\\n\").concat(topTeams.map(t=>\"\".concat(t.rank,\". \").concat(t.display_name,\" (\").concat(t.wins,\"-\").concat(t.losses,\", \").concat(t.points_for.toFixed(1),\" PF)\")).join('\\n'),\"\\n\\nBottom 3 Teams:\\n\").concat(bottomTeams.map(t=>\"\".concat(t.rank,\". \").concat(t.display_name,\" (\").concat(t.wins,\"-\").concat(t.losses,\", \").concat(t.points_for.toFixed(1),\" PF)\")).join('\\n'));}buildTeamContext(team,allTeams){const avgPoints=allTeams.reduce((sum,t)=>sum+t.points_for,0)/allTeams.length;const avgPointsAgainst=allTeams.reduce((sum,t)=>sum+t.points_against,0)/allTeams.length;return\"Team Performance vs League Average:\\nPoints For: \".concat(team.points_for.toFixed(1),\" (league avg: \").concat(avgPoints.toFixed(1),\")\\nPoints Against: \").concat(team.points_against.toFixed(1),\" (league avg: \").concat(avgPointsAgainst.toFixed(1),\")\\nPoint Differential: \").concat((team.points_for-team.points_against).toFixed(1));}getUpcomingOpponent(team,allTeams,currentWeek){// Simple logic to find next opponent (would need matchup data for accuracy)\nconst otherTeams=allTeams.filter(t=>t.roster_id!==team.roster_id);const randomOpponent=otherTeams[Math.floor(Math.random()*otherTeams.length)];return(randomOpponent===null||randomOpponent===void 0?void 0:randomOpponent.display_name)||'TBD';}getFallbackAnalysis(team,allTeams){const avgPoints=allTeams.reduce((sum,t)=>sum+t.points_for,0)/allTeams.length;const isTopHalf=team.rank<=Math.ceil(allTeams.length/2);const highScoring=team.points_for>avgPoints;let strengths=[];let weaknesses=[];let advice='';let outlook='';if(highScoring){strengths.push('Strong offensive production');strengths.push('Consistently high scoring potential');}else{weaknesses.push('Below average scoring output');weaknesses.push('Need to improve roster productivity');}if(isTopHalf){strengths.push('Currently in playoff contention');outlook='Good position for playoff push with consistent performance.';}else{weaknesses.push('Currently outside playoff picture');outlook='Need strong finish to make playoffs. Focus on high-upside plays.';}advice=highScoring?'Maintain consistent lineup choices and avoid risky plays.':'Look for waiver wire pickups and consider bold lineup moves.';return{teamName:team.display_name,record:\"\".concat(team.wins,\"-\").concat(team.losses),overallGrade:isTopHalf?highScoring?'B+':'B':highScoring?'B-':'C+',gradeExplanation:\"\".concat(isTopHalf?'Above average':'Below average',\" performance with \").concat(highScoring?'strong':'weak',\" scoring output.\"),strengths,weaknesses,advice,outlook,upcomingMatchup:{opponent:this.getUpcomingOpponent(team,allTeams,1),prediction:'Competitive matchup expected',keyFactors:['Recent performance','Team health','Matchup advantages'],confidence:'Medium'},rosterAnalysis:{qb:'QB analysis not available without roster data',rb:'RB analysis not available without roster data',wr:'WR analysis not available without roster data',te:'TE analysis not available without roster data',flex:'Flex depth analysis not available without roster data',defense:'K/DST analysis not available without roster data'},recentTrends:[highScoring?'Strong offensive output':'Offensive struggles',isTopHalf?'Competitive standings position':'Fighting for playoff position','Performance trending based on current metrics']};}}export const claudeApi=new ClaudeApiService();","map":{"version":3,"names":["ClaudeApiService","constructor","apiKey","baseUrl","process","env","REACT_APP_CLAUDE_API_KEY","console","warn","analyzeTeam","team","allTeams","leagueName","currentWeek","Error","leagueContext","buildLeagueContext","teamContext","buildTeamContext","upcomingOpponent","getUpcomingOpponent","prompt","concat","display_name","wins","losses","points_for","toFixed","rank","length","_data$content$","response","fetch","method","headers","body","JSON","stringify","model","max_tokens","messages","role","content","ok","status","data","json","analysisText","text","jsonMatch","match","analysisData","parse","teamName","record","overallGrade","gradeExplanation","strengths","weaknesses","advice","outlook","upcomingMatchup","opponent","prediction","keyFactors","confidence","rosterAnalysis","qb","rb","wr","te","flex","defense","recentTrends","error","getFallbackAnalysis","teams","topTeams","slice","bottomTeams","map","t","join","avgPoints","reduce","sum","avgPointsAgainst","points_against","otherTeams","filter","roster_id","randomOpponent","Math","floor","random","isTopHalf","ceil","highScoring","push","claudeApi"],"sources":["/Users/roshikdatla/Documents/Amberwood-Football-League/fantasy-football-dashboard/src/services/claudeApi.ts"],"sourcesContent":["import { TeamStanding } from '../types/sleeper';\n\ninterface ClaudeApiResponse {\n  content: Array<{\n    text: string;\n  }>;\n}\n\ninterface TeamAnalysis {\n  teamName: string;\n  record: string;\n  overallGrade: string;\n  gradeExplanation: string;\n  strengths: string[];\n  weaknesses: string[];\n  advice: string;\n  outlook: string;\n  upcomingMatchup: {\n    opponent: string;\n    prediction: string;\n    keyFactors: string[];\n    confidence: string;\n  };\n  rosterAnalysis: {\n    qb: string;\n    rb: string;\n    wr: string;\n    te: string;\n    flex: string;\n    defense: string;\n  };\n  recentTrends: string[];\n}\n\nexport class ClaudeApiService {\n  private apiKey: string;\n  private baseUrl = 'https://api.anthropic.com/v1/messages';\n\n  constructor() {\n    this.apiKey = process.env.REACT_APP_CLAUDE_API_KEY || '';\n    if (!this.apiKey) {\n      console.warn('Claude API key not found. Set REACT_APP_CLAUDE_API_KEY environment variable.');\n    }\n  }\n\n  async analyzeTeam(\n    team: TeamStanding, \n    allTeams: TeamStanding[], \n    leagueName: string,\n    currentWeek: number\n  ): Promise<TeamAnalysis> {\n    if (!this.apiKey) {\n      throw new Error('Claude API key not configured');\n    }\n\n    const leagueContext = this.buildLeagueContext(allTeams, leagueName, currentWeek);\n    const teamContext = this.buildTeamContext(team, allTeams);\n    const upcomingOpponent = this.getUpcomingOpponent(team, allTeams, currentWeek);\n    \n    const prompt = `Provide a comprehensive fantasy football analysis for this team:\n\nLEAGUE CONTEXT:\n${leagueContext}\n\nTEAM TO ANALYZE:\n${team.display_name}\nRecord: ${team.wins}-${team.losses}\nPoints For: ${team.points_for.toFixed(1)}\nLeague Rank: ${team.rank} out of ${allTeams.length}\n\nPERFORMANCE CONTEXT:\n${teamContext}\n\nUPCOMING MATCHUP:\nNext opponent: ${upcomingOpponent}\n\nProvide a detailed analysis in JSON format:\n{\n  \"overallGrade\": \"A+/A/A-/B+/B/B-/C+/C/C-/D+/D/F\",\n  \"gradeExplanation\": \"2-3 sentence explanation of the grade\",\n  \"strengths\": [\"strength1\", \"strength2\", \"strength3\"],\n  \"weaknesses\": [\"weakness1\", \"weakness2\", \"weakness3\"], \n  \"advice\": \"Specific actionable advice for upcoming games\",\n  \"outlook\": \"Rest of season and playoff outlook\",\n  \"upcomingMatchup\": {\n    \"opponent\": \"${upcomingOpponent}\",\n    \"prediction\": \"Win/Loss prediction with score estimate\",\n    \"keyFactors\": [\"factor1\", \"factor2\", \"factor3\"],\n    \"confidence\": \"High/Medium/Low confidence level\"\n  },\n  \"rosterAnalysis\": {\n    \"qb\": \"QB position strength assessment\",\n    \"rb\": \"RB position strength assessment\", \n    \"wr\": \"WR position strength assessment\",\n    \"te\": \"TE position strength assessment\",\n    \"flex\": \"FLEX position depth assessment\",\n    \"defense\": \"K/DST strength assessment\"\n  },\n  \"recentTrends\": [\"trend1\", \"trend2\", \"trend3\"]\n}\n\nFocus on fantasy football strategy, performance trends, and actionable insights.`;\n\n    try {\n      const response = await fetch(this.baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': this.apiKey,\n          'anthropic-version': '2023-06-01'\n        },\n        body: JSON.stringify({\n          model: 'claude-3-sonnet-20240229',\n          max_tokens: 1000,\n          messages: [\n            {\n              role: 'user',\n              content: prompt\n            }\n          ]\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Claude API error: ${response.status}`);\n      }\n\n      const data: ClaudeApiResponse = await response.json();\n      const analysisText = data.content[0]?.text || '';\n      \n      // Parse the JSON response from Claude\n      const jsonMatch = analysisText.match(/\\{[\\s\\S]*\\}/);\n      if (!jsonMatch) {\n        throw new Error('Invalid response format from Claude API');\n      }\n\n      const analysisData = JSON.parse(jsonMatch[0]);\n      \n      return {\n        teamName: team.display_name,\n        record: `${team.wins}-${team.losses}`,\n        overallGrade: analysisData.overallGrade || 'B',\n        gradeExplanation: analysisData.gradeExplanation || 'Standard performance assessment.',\n        strengths: analysisData.strengths || [],\n        weaknesses: analysisData.weaknesses || [],\n        advice: analysisData.advice || 'No specific advice available.',\n        outlook: analysisData.outlook || 'Outlook not available.',\n        upcomingMatchup: analysisData.upcomingMatchup || {\n          opponent: upcomingOpponent,\n          prediction: 'Competitive matchup expected',\n          keyFactors: ['Player availability', 'Recent form', 'Matchup history'],\n          confidence: 'Medium'\n        },\n        rosterAnalysis: analysisData.rosterAnalysis || {\n          qb: 'QB assessment not available',\n          rb: 'RB assessment not available', \n          wr: 'WR assessment not available',\n          te: 'TE assessment not available',\n          flex: 'Flex assessment not available',\n          defense: 'K/DST assessment not available'\n        },\n        recentTrends: analysisData.recentTrends || ['Performance trends not available']\n      };\n\n    } catch (error) {\n      console.error('Claude API error:', error);\n      \n      // Fallback analysis if API fails\n      return this.getFallbackAnalysis(team, allTeams);\n    }\n  }\n\n  private buildLeagueContext(teams: TeamStanding[], leagueName: string, currentWeek: number): string {\n    const topTeams = teams.slice(0, 3);\n    const bottomTeams = teams.slice(-3);\n    \n    return `League: ${leagueName}\nCurrent Week: ${currentWeek}\nLeague Size: ${teams.length} teams\n\nTop 3 Teams:\n${topTeams.map(t => `${t.rank}. ${t.display_name} (${t.wins}-${t.losses}, ${t.points_for.toFixed(1)} PF)`).join('\\n')}\n\nBottom 3 Teams:\n${bottomTeams.map(t => `${t.rank}. ${t.display_name} (${t.wins}-${t.losses}, ${t.points_for.toFixed(1)} PF)`).join('\\n')}`;\n  }\n\n  private buildTeamContext(team: TeamStanding, allTeams: TeamStanding[]): string {\n    const avgPoints = allTeams.reduce((sum, t) => sum + t.points_for, 0) / allTeams.length;\n    const avgPointsAgainst = allTeams.reduce((sum, t) => sum + t.points_against, 0) / allTeams.length;\n    \n    return `Team Performance vs League Average:\nPoints For: ${team.points_for.toFixed(1)} (league avg: ${avgPoints.toFixed(1)})\nPoints Against: ${team.points_against.toFixed(1)} (league avg: ${avgPointsAgainst.toFixed(1)})\nPoint Differential: ${(team.points_for - team.points_against).toFixed(1)}`;\n  }\n\n  private getUpcomingOpponent(team: TeamStanding, allTeams: TeamStanding[], currentWeek: number): string {\n    // Simple logic to find next opponent (would need matchup data for accuracy)\n    const otherTeams = allTeams.filter(t => t.roster_id !== team.roster_id);\n    const randomOpponent = otherTeams[Math.floor(Math.random() * otherTeams.length)];\n    return randomOpponent?.display_name || 'TBD';\n  }\n\n  private getFallbackAnalysis(team: TeamStanding, allTeams: TeamStanding[]): TeamAnalysis {\n    const avgPoints = allTeams.reduce((sum, t) => sum + t.points_for, 0) / allTeams.length;\n    const isTopHalf = team.rank <= Math.ceil(allTeams.length / 2);\n    const highScoring = team.points_for > avgPoints;\n    \n    let strengths = [];\n    let weaknesses = [];\n    let advice = '';\n    let outlook = '';\n\n    if (highScoring) {\n      strengths.push('Strong offensive production');\n      strengths.push('Consistently high scoring potential');\n    } else {\n      weaknesses.push('Below average scoring output');\n      weaknesses.push('Need to improve roster productivity');\n    }\n\n    if (isTopHalf) {\n      strengths.push('Currently in playoff contention');\n      outlook = 'Good position for playoff push with consistent performance.';\n    } else {\n      weaknesses.push('Currently outside playoff picture');\n      outlook = 'Need strong finish to make playoffs. Focus on high-upside plays.';\n    }\n\n    advice = highScoring \n      ? 'Maintain consistent lineup choices and avoid risky plays.'\n      : 'Look for waiver wire pickups and consider bold lineup moves.';\n\n    return {\n      teamName: team.display_name,\n      record: `${team.wins}-${team.losses}`,\n      overallGrade: isTopHalf ? (highScoring ? 'B+' : 'B') : (highScoring ? 'B-' : 'C+'),\n      gradeExplanation: `${isTopHalf ? 'Above average' : 'Below average'} performance with ${highScoring ? 'strong' : 'weak'} scoring output.`,\n      strengths,\n      weaknesses,\n      advice,\n      outlook,\n      upcomingMatchup: {\n        opponent: this.getUpcomingOpponent(team, allTeams, 1),\n        prediction: 'Competitive matchup expected',\n        keyFactors: ['Recent performance', 'Team health', 'Matchup advantages'],\n        confidence: 'Medium'\n      },\n      rosterAnalysis: {\n        qb: 'QB analysis not available without roster data',\n        rb: 'RB analysis not available without roster data',\n        wr: 'WR analysis not available without roster data', \n        te: 'TE analysis not available without roster data',\n        flex: 'Flex depth analysis not available without roster data',\n        defense: 'K/DST analysis not available without roster data'\n      },\n      recentTrends: [\n        highScoring ? 'Strong offensive output' : 'Offensive struggles',\n        isTopHalf ? 'Competitive standings position' : 'Fighting for playoff position',\n        'Performance trending based on current metrics'\n      ]\n    };\n  }\n}\n\nexport const claudeApi = new ClaudeApiService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}