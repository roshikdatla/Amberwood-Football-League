{"ast":null,"code":"export class ClaudeApiService{constructor(){this.apiKey=void 0;this.baseUrl='https://api.anthropic.com/v1/messages';this.apiKey=process.env.REACT_APP_CLAUDE_API_KEY||'';if(!this.apiKey){console.warn('Claude API key not found. Set REACT_APP_CLAUDE_API_KEY environment variable.');}}async analyzeTeam(team,allTeams,leagueName,currentWeek){if(!this.apiKey){throw new Error('Claude API key not configured');}const leagueContext=this.buildLeagueContext(allTeams,leagueName,currentWeek);const teamContext=this.buildTeamContext(team,allTeams);const prompt=\"Analyze this fantasy football team in the context of their league:\\n\\n\".concat(leagueContext,\"\\n\\nFocus on: \").concat(team.display_name,\"\\nRecord: \").concat(team.wins,\"-\").concat(team.losses,\"\\nPoints For: \").concat(team.points_for.toFixed(1),\"\\nLeague Rank: \").concat(team.rank,\" out of \").concat(allTeams.length,\"\\n\\n\").concat(teamContext,\"\\n\\nPlease provide a comprehensive analysis in the following JSON format:\\n{\\n  \\\"strengths\\\": [\\\"strength1\\\", \\\"strength2\\\", \\\"strength3\\\"],\\n  \\\"weaknesses\\\": [\\\"weakness1\\\", \\\"weakness2\\\", \\\"weakness3\\\"],\\n  \\\"advice\\\": \\\"Specific actionable advice for this week and upcoming games\\\",\\n  \\\"outlook\\\": \\\"Rest of season outlook and playoff chances\\\"\\n}\\n\\nKeep each point concise (1-2 sentences max). Focus on fantasy football strategy, not real NFL analysis.\");try{var _data$content$;const response=await fetch(this.baseUrl,{method:'POST',headers:{'Content-Type':'application/json','x-api-key':this.apiKey,'anthropic-version':'2023-06-01'},body:JSON.stringify({model:'claude-3-sonnet-20240229',max_tokens:1000,messages:[{role:'user',content:prompt}]})});if(!response.ok){throw new Error(\"Claude API error: \".concat(response.status));}const data=await response.json();const analysisText=((_data$content$=data.content[0])===null||_data$content$===void 0?void 0:_data$content$.text)||'';// Parse the JSON response from Claude\nconst jsonMatch=analysisText.match(/\\{[\\s\\S]*\\}/);if(!jsonMatch){throw new Error('Invalid response format from Claude API');}const analysisData=JSON.parse(jsonMatch[0]);return{teamName:team.display_name,record:\"\".concat(team.wins,\"-\").concat(team.losses),strengths:analysisData.strengths||[],weaknesses:analysisData.weaknesses||[],advice:analysisData.advice||'No specific advice available.',outlook:analysisData.outlook||'Outlook not available.'};}catch(error){console.error('Claude API error:',error);// Fallback analysis if API fails\nreturn this.getFallbackAnalysis(team,allTeams);}}buildLeagueContext(teams,leagueName,currentWeek){const topTeams=teams.slice(0,3);const bottomTeams=teams.slice(-3);return\"League: \".concat(leagueName,\"\\nCurrent Week: \").concat(currentWeek,\"\\nLeague Size: \").concat(teams.length,\" teams\\n\\nTop 3 Teams:\\n\").concat(topTeams.map(t=>\"\".concat(t.rank,\". \").concat(t.display_name,\" (\").concat(t.wins,\"-\").concat(t.losses,\", \").concat(t.points_for.toFixed(1),\" PF)\")).join('\\n'),\"\\n\\nBottom 3 Teams:\\n\").concat(bottomTeams.map(t=>\"\".concat(t.rank,\". \").concat(t.display_name,\" (\").concat(t.wins,\"-\").concat(t.losses,\", \").concat(t.points_for.toFixed(1),\" PF)\")).join('\\n'));}buildTeamContext(team,allTeams){const avgPoints=allTeams.reduce((sum,t)=>sum+t.points_for,0)/allTeams.length;const avgPointsAgainst=allTeams.reduce((sum,t)=>sum+t.points_against,0)/allTeams.length;return\"Team Performance vs League Average:\\nPoints For: \".concat(team.points_for.toFixed(1),\" (league avg: \").concat(avgPoints.toFixed(1),\")\\nPoints Against: \").concat(team.points_against.toFixed(1),\" (league avg: \").concat(avgPointsAgainst.toFixed(1),\")\\nPoint Differential: \").concat((team.points_for-team.points_against).toFixed(1));}getFallbackAnalysis(team,allTeams){const avgPoints=allTeams.reduce((sum,t)=>sum+t.points_for,0)/allTeams.length;const isTopHalf=team.rank<=Math.ceil(allTeams.length/2);const highScoring=team.points_for>avgPoints;let strengths=[];let weaknesses=[];let advice='';let outlook='';if(highScoring){strengths.push('Strong offensive production');strengths.push('Consistently high scoring potential');}else{weaknesses.push('Below average scoring output');weaknesses.push('Need to improve roster productivity');}if(isTopHalf){strengths.push('Currently in playoff contention');outlook='Good position for playoff push with consistent performance.';}else{weaknesses.push('Currently outside playoff picture');outlook='Need strong finish to make playoffs. Focus on high-upside plays.';}advice=highScoring?'Maintain consistent lineup choices and avoid risky plays.':'Look for waiver wire pickups and consider bold lineup moves.';return{teamName:team.display_name,record:\"\".concat(team.wins,\"-\").concat(team.losses),strengths,weaknesses,advice,outlook};}}export const claudeApi=new ClaudeApiService();","map":{"version":3,"names":["ClaudeApiService","constructor","apiKey","baseUrl","process","env","REACT_APP_CLAUDE_API_KEY","console","warn","analyzeTeam","team","allTeams","leagueName","currentWeek","Error","leagueContext","buildLeagueContext","teamContext","buildTeamContext","prompt","concat","display_name","wins","losses","points_for","toFixed","rank","length","_data$content$","response","fetch","method","headers","body","JSON","stringify","model","max_tokens","messages","role","content","ok","status","data","json","analysisText","text","jsonMatch","match","analysisData","parse","teamName","record","strengths","weaknesses","advice","outlook","error","getFallbackAnalysis","teams","topTeams","slice","bottomTeams","map","t","join","avgPoints","reduce","sum","avgPointsAgainst","points_against","isTopHalf","Math","ceil","highScoring","push","claudeApi"],"sources":["/Users/roshikdatla/Documents/Amberwood-Football-League/fantasy-football-dashboard/src/services/claudeApi.ts"],"sourcesContent":["import { TeamStanding } from '../types/sleeper';\n\ninterface ClaudeApiResponse {\n  content: Array<{\n    text: string;\n  }>;\n}\n\ninterface TeamAnalysis {\n  teamName: string;\n  record: string;\n  strengths: string[];\n  weaknesses: string[];\n  advice: string;\n  outlook: string;\n}\n\nexport class ClaudeApiService {\n  private apiKey: string;\n  private baseUrl = 'https://api.anthropic.com/v1/messages';\n\n  constructor() {\n    this.apiKey = process.env.REACT_APP_CLAUDE_API_KEY || '';\n    if (!this.apiKey) {\n      console.warn('Claude API key not found. Set REACT_APP_CLAUDE_API_KEY environment variable.');\n    }\n  }\n\n  async analyzeTeam(\n    team: TeamStanding, \n    allTeams: TeamStanding[], \n    leagueName: string,\n    currentWeek: number\n  ): Promise<TeamAnalysis> {\n    if (!this.apiKey) {\n      throw new Error('Claude API key not configured');\n    }\n\n    const leagueContext = this.buildLeagueContext(allTeams, leagueName, currentWeek);\n    const teamContext = this.buildTeamContext(team, allTeams);\n    \n    const prompt = `Analyze this fantasy football team in the context of their league:\n\n${leagueContext}\n\nFocus on: ${team.display_name}\nRecord: ${team.wins}-${team.losses}\nPoints For: ${team.points_for.toFixed(1)}\nLeague Rank: ${team.rank} out of ${allTeams.length}\n\n${teamContext}\n\nPlease provide a comprehensive analysis in the following JSON format:\n{\n  \"strengths\": [\"strength1\", \"strength2\", \"strength3\"],\n  \"weaknesses\": [\"weakness1\", \"weakness2\", \"weakness3\"],\n  \"advice\": \"Specific actionable advice for this week and upcoming games\",\n  \"outlook\": \"Rest of season outlook and playoff chances\"\n}\n\nKeep each point concise (1-2 sentences max). Focus on fantasy football strategy, not real NFL analysis.`;\n\n    try {\n      const response = await fetch(this.baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': this.apiKey,\n          'anthropic-version': '2023-06-01'\n        },\n        body: JSON.stringify({\n          model: 'claude-3-sonnet-20240229',\n          max_tokens: 1000,\n          messages: [\n            {\n              role: 'user',\n              content: prompt\n            }\n          ]\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Claude API error: ${response.status}`);\n      }\n\n      const data: ClaudeApiResponse = await response.json();\n      const analysisText = data.content[0]?.text || '';\n      \n      // Parse the JSON response from Claude\n      const jsonMatch = analysisText.match(/\\{[\\s\\S]*\\}/);\n      if (!jsonMatch) {\n        throw new Error('Invalid response format from Claude API');\n      }\n\n      const analysisData = JSON.parse(jsonMatch[0]);\n      \n      return {\n        teamName: team.display_name,\n        record: `${team.wins}-${team.losses}`,\n        strengths: analysisData.strengths || [],\n        weaknesses: analysisData.weaknesses || [],\n        advice: analysisData.advice || 'No specific advice available.',\n        outlook: analysisData.outlook || 'Outlook not available.'\n      };\n\n    } catch (error) {\n      console.error('Claude API error:', error);\n      \n      // Fallback analysis if API fails\n      return this.getFallbackAnalysis(team, allTeams);\n    }\n  }\n\n  private buildLeagueContext(teams: TeamStanding[], leagueName: string, currentWeek: number): string {\n    const topTeams = teams.slice(0, 3);\n    const bottomTeams = teams.slice(-3);\n    \n    return `League: ${leagueName}\nCurrent Week: ${currentWeek}\nLeague Size: ${teams.length} teams\n\nTop 3 Teams:\n${topTeams.map(t => `${t.rank}. ${t.display_name} (${t.wins}-${t.losses}, ${t.points_for.toFixed(1)} PF)`).join('\\n')}\n\nBottom 3 Teams:\n${bottomTeams.map(t => `${t.rank}. ${t.display_name} (${t.wins}-${t.losses}, ${t.points_for.toFixed(1)} PF)`).join('\\n')}`;\n  }\n\n  private buildTeamContext(team: TeamStanding, allTeams: TeamStanding[]): string {\n    const avgPoints = allTeams.reduce((sum, t) => sum + t.points_for, 0) / allTeams.length;\n    const avgPointsAgainst = allTeams.reduce((sum, t) => sum + t.points_against, 0) / allTeams.length;\n    \n    return `Team Performance vs League Average:\nPoints For: ${team.points_for.toFixed(1)} (league avg: ${avgPoints.toFixed(1)})\nPoints Against: ${team.points_against.toFixed(1)} (league avg: ${avgPointsAgainst.toFixed(1)})\nPoint Differential: ${(team.points_for - team.points_against).toFixed(1)}`;\n  }\n\n  private getFallbackAnalysis(team: TeamStanding, allTeams: TeamStanding[]): TeamAnalysis {\n    const avgPoints = allTeams.reduce((sum, t) => sum + t.points_for, 0) / allTeams.length;\n    const isTopHalf = team.rank <= Math.ceil(allTeams.length / 2);\n    const highScoring = team.points_for > avgPoints;\n    \n    let strengths = [];\n    let weaknesses = [];\n    let advice = '';\n    let outlook = '';\n\n    if (highScoring) {\n      strengths.push('Strong offensive production');\n      strengths.push('Consistently high scoring potential');\n    } else {\n      weaknesses.push('Below average scoring output');\n      weaknesses.push('Need to improve roster productivity');\n    }\n\n    if (isTopHalf) {\n      strengths.push('Currently in playoff contention');\n      outlook = 'Good position for playoff push with consistent performance.';\n    } else {\n      weaknesses.push('Currently outside playoff picture');\n      outlook = 'Need strong finish to make playoffs. Focus on high-upside plays.';\n    }\n\n    advice = highScoring \n      ? 'Maintain consistent lineup choices and avoid risky plays.'\n      : 'Look for waiver wire pickups and consider bold lineup moves.';\n\n    return {\n      teamName: team.display_name,\n      record: `${team.wins}-${team.losses}`,\n      strengths,\n      weaknesses,\n      advice,\n      outlook\n    };\n  }\n}\n\nexport const claudeApi = new ClaudeApiService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}