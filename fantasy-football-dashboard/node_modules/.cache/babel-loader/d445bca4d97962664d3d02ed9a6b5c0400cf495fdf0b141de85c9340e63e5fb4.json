{"ast":null,"code":"import React,{useState,useEffect}from'react';import{sleeperApi}from'../services/sleeperApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ActivityFeed=_ref=>{let{leagueId,standings}=_ref;const[transactions,setTransactions]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[players,setPlayers]=useState({});useEffect(()=>{const fetchActivityData=async()=>{try{setLoading(true);const[transactionData,playersData]=await Promise.all([sleeperApi.getLeagueTransactions(leagueId),sleeperApi.getAllPlayers()]);setTransactions(transactionData.slice(0,10));// Show last 10 transactions\nsetPlayers(playersData);}catch(err){setError('Failed to fetch activity data');console.error('Activity feed error:',err);}finally{setLoading(false);}};if(leagueId){fetchActivityData();}},[leagueId]);const getPlayerName=playerId=>{const player=players[playerId];if(!player)return\"Player \".concat(playerId);return\"\".concat(player.first_name||'',\" \").concat(player.last_name||'').trim()||player.full_name||\"Player \".concat(playerId);};const getTeamName=rosterId=>{const team=standings.find(s=>s.roster_id===rosterId);return(team===null||team===void 0?void 0:team.display_name)||\"Team \".concat(rosterId);};const getTransactionDescription=transaction=>{const rosterId=transaction.roster_ids[0];const teamName=getTeamName(rosterId);if(transaction.type==='waiver'){if(transaction.adds&&transaction.drops){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);const droppedPlayers=Object.keys(transaction.drops).map(getPlayerName);return\"\".concat(teamName,\" added \").concat(addedPlayers.join(', '),\", dropped \").concat(droppedPlayers.join(', '));}else if(transaction.adds){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);return\"\".concat(teamName,\" added \").concat(addedPlayers.join(', '));}}else if(transaction.type==='free_agent'){if(transaction.adds&&transaction.drops){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);const droppedPlayers=Object.keys(transaction.drops).map(getPlayerName);return\"\".concat(teamName,\" added \").concat(addedPlayers.join(', '),\", dropped \").concat(droppedPlayers.join(', '));}else if(transaction.adds){const addedPlayers=Object.keys(transaction.adds).map(getPlayerName);return\"\".concat(teamName,\" added \").concat(addedPlayers.join(', '));}}else if(transaction.type==='trade'){return\"\".concat(teamName,\" completed a trade\");}return\"\".concat(teamName,\" made a \").concat(transaction.type,\" move\");};const getTransactionIcon=transaction=>{switch(transaction.type){case'waiver':return'üìã';case'free_agent':return'üÜì';case'trade':return'üîÑ';default:return'üìù';}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-feed-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading recent activity...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-feed-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-feed-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),transactions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-activity\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No recent transactions\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"activity-list\",children:transactions.map(transaction=>{const timeAgo=Math.floor((Date.now()-transaction.created)/(1000*60*60*24));const timeText=timeAgo===0?'Today':\"\".concat(timeAgo,\"d ago\");return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-icon\",children:getTransactionIcon(transaction)}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-description\",children:getTransactionDescription(transaction)}),/*#__PURE__*/_jsx(\"div\",{className:\"activity-status\",children:transaction.status==='complete'?timeText:transaction.status})]})]},transaction.transaction_id);})})]});};export default ActivityFeed;","map":{"version":3,"names":["React","useState","useEffect","sleeperApi","jsx","_jsx","jsxs","_jsxs","ActivityFeed","_ref","leagueId","standings","transactions","setTransactions","loading","setLoading","error","setError","players","setPlayers","fetchActivityData","transactionData","playersData","Promise","all","getLeagueTransactions","getAllPlayers","slice","err","console","getPlayerName","playerId","player","concat","first_name","last_name","trim","full_name","getTeamName","rosterId","team","find","s","roster_id","display_name","getTransactionDescription","transaction","roster_ids","teamName","type","adds","drops","addedPlayers","Object","keys","map","droppedPlayers","join","getTransactionIcon","className","children","length","timeAgo","Math","floor","Date","now","created","timeText","status","transaction_id"],"sources":["/Users/roshikdatla/Documents/Amberwood-Football-League/fantasy-football-dashboard/src/components/ActivityFeed.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { sleeperApi } from '../services/sleeperApi';\nimport { TeamStanding } from '../types/sleeper';\n\ninterface Transaction {\n  transaction_id: string;\n  type: string;\n  status: string;\n  created: number;\n  roster_ids: number[];\n  adds: { [key: string]: number } | null;\n  drops: { [key: string]: number } | null;\n  waiver_budget: any[];\n}\n\ninterface ActivityFeedProps {\n  leagueId: string;\n  standings: TeamStanding[];\n}\n\nconst ActivityFeed: React.FC<ActivityFeedProps> = ({ leagueId, standings }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string>('');\n  const [players, setPlayers] = useState<{ [key: string]: any }>({});\n\n  useEffect(() => {\n    const fetchActivityData = async () => {\n      try {\n        setLoading(true);\n        const [transactionData, playersData] = await Promise.all([\n          sleeperApi.getLeagueTransactions(leagueId),\n          sleeperApi.getAllPlayers()\n        ]);\n        \n        setTransactions(transactionData.slice(0, 10)); // Show last 10 transactions\n        setPlayers(playersData);\n      } catch (err) {\n        setError('Failed to fetch activity data');\n        console.error('Activity feed error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (leagueId) {\n      fetchActivityData();\n    }\n  }, [leagueId]);\n\n  const getPlayerName = (playerId: string): string => {\n    const player = players[playerId];\n    if (!player) return `Player ${playerId}`;\n    return `${player.first_name || ''} ${player.last_name || ''}`.trim() || player.full_name || `Player ${playerId}`;\n  };\n\n  const getTeamName = (rosterId: number): string => {\n    const team = standings.find(s => s.roster_id === rosterId);\n    return team?.display_name || `Team ${rosterId}`;\n  };\n\n  const getTransactionDescription = (transaction: Transaction): string => {\n    const rosterId = transaction.roster_ids[0];\n    const teamName = getTeamName(rosterId);\n\n    if (transaction.type === 'waiver') {\n      if (transaction.adds && transaction.drops) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        const droppedPlayers = Object.keys(transaction.drops).map(getPlayerName);\n        return `${teamName} added ${addedPlayers.join(', ')}, dropped ${droppedPlayers.join(', ')}`;\n      } else if (transaction.adds) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        return `${teamName} added ${addedPlayers.join(', ')}`;\n      }\n    } else if (transaction.type === 'free_agent') {\n      if (transaction.adds && transaction.drops) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        const droppedPlayers = Object.keys(transaction.drops).map(getPlayerName);\n        return `${teamName} added ${addedPlayers.join(', ')}, dropped ${droppedPlayers.join(', ')}`;\n      } else if (transaction.adds) {\n        const addedPlayers = Object.keys(transaction.adds).map(getPlayerName);\n        return `${teamName} added ${addedPlayers.join(', ')}`;\n      }\n    } else if (transaction.type === 'trade') {\n      return `${teamName} completed a trade`;\n    }\n\n    return `${teamName} made a ${transaction.type} move`;\n  };\n\n  const getTransactionIcon = (transaction: Transaction): string => {\n    switch (transaction.type) {\n      case 'waiver':\n        return 'üìã';\n      case 'free_agent':\n        return 'üÜì';\n      case 'trade':\n        return 'üîÑ';\n      default:\n        return 'üìù';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"activity-feed-container\">\n        <h3>Recent Activity</h3>\n        <div className=\"loading\">Loading recent activity...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"activity-feed-container\">\n        <h3>Recent Activity</h3>\n        <div className=\"error\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"activity-feed-container\">\n      <h3>Recent Activity</h3>\n      {transactions.length === 0 ? (\n        <div className=\"no-activity\">\n          <p>No recent transactions</p>\n        </div>\n      ) : (\n        <div className=\"activity-list\">\n          {transactions.map((transaction) => {\n            const timeAgo = Math.floor((Date.now() - transaction.created) / (1000 * 60 * 60 * 24));\n            const timeText = timeAgo === 0 ? 'Today' : `${timeAgo}d ago`;\n            \n            return (\n              <div key={transaction.transaction_id} className=\"activity-item\">\n                <div className=\"activity-icon\">\n                  {getTransactionIcon(transaction)}\n                </div>\n                <div className=\"activity-content\">\n                  <div className=\"activity-description\">\n                    {getTransactionDescription(transaction)}\n                  </div>\n                  <div className=\"activity-status\">\n                    {transaction.status === 'complete' ? timeText : transaction.status}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ActivityFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}